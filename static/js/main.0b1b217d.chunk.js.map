{"version":3,"sources":["components/Header/index.js","components/Rodape/index.js","services/api.js","pages/home/index.js","pages/orientacao/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","Rodape","className","href","api","axios","create","baseURL","Home","state","paises","pais","estados","carregarPaises","a","busca","get","response","response2","totPaises","data","length","dados","p","nomePais","country","push","setState","undefined","alert","this","onInput","e","target","value","type","name","onClick","onSend","bind","map","key","cases","confirmed","deaths","recovered","estado","uf","suspects","to","Component","Orientacao","pergunta","perguntaAtual","pontos","resultado","texto","detalhe","pularPergunta","atual","somarPontos","mostrarResultado","Routes","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b1b217d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './estilo.css'\r\n\r\nconst Header = () => (\r\n    <header id=\"cabecalho-principal\" >Covid19 Statistics</header>\r\n)\r\n\r\nexport default Header","import React from 'react'\r\n\r\nimport './styles.css'\r\n\r\nconst Rodape = () => (\r\n    <footer>\r\n        <div className=\"sobre-site\">\r\n            <p>Esta página está usando a API<a href=\"https://covid19-brazil-api-docs.now.sh/\"> COVID-19 Brasil</a></p>\r\n            <p>Sistema de autoavaliação criada pelo #COVID-19hackton - Ecossistema de inovação do Moçambique</p>\r\n        </div>\r\n        <div className=\"sobre-autor\">\r\n            <p>Sistema Front do site desenvolvido por Wuh Cardoso</p>\r\n            <p>GitHub: <a href=\"https://github.com/UhCardoso\">https://github.com/UhCardoso</a></p>\r\n            <p>Instagram: <span className=\"destaque\">@kardozwerlen</span></p>\r\n        </div>    \r\n    </footer>\r\n)\r\n \r\nexport default Rodape","import axios from 'axios'\r\n\r\nconst api = axios.create({baseURL: 'https://covid19-brazil-api.now.sh/api/report/v1/'})\r\n\r\nexport default api","import React, {Component} from 'react'\r\nimport api from '../../services/api'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport './style.css'\r\n\r\nexport default class Home extends Component {\r\n    state = {\r\n        paises: [],\r\n        pais: {},\r\n        estados: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.carregarPaises()\r\n    }\r\n\r\n    carregarPaises = async (busca = '/countries') => {\r\n        const response = await api.get(busca)\r\n\r\n        const response2 = await api.get('')\r\n\r\n        if(busca == '/countries') {\r\n            let totPaises = response.data.data.length\r\n\r\n            let dados = []\r\n\r\n            // Trocar o nome dos paises principais para versao brasileira\r\n            for(let p = 0; p < totPaises; p ++) {\r\n                let nomePais = response.data.data[p].country\r\n\r\n                switch(nomePais) {\r\n                    case 'US':\r\n                        response.data.data[p].country = 'Estados Unidos'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'Canada':\r\n                        response.data.data[p].country = 'Canadá'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'Brazil':\r\n                        response.data.data[p].country = 'Brasil'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n                    \r\n                    case 'China':\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'Japan':\r\n                        response.data.data[p].country = 'Japão'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'Germany':\r\n                        response.data.data[p].country = 'Alemanha'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'United Kingdom':\r\n                        response.data.data[p].country = 'Reino Unido'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'France':\r\n                        response.data.data[p].country = 'França'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'India':\r\n                        response.data.data[p].country = 'Índia'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'Italy':\r\n                        response.data.data[p].country = 'Itália'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'Russia':\r\n                        response.data.data[p].country = 'Rússia'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n\r\n                    case 'Spain':\r\n                        response.data.data[p].country = 'Espanha'\r\n                        dados.push(response.data.data[p])\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.setState({paises: dados, estados: response2.data.data})\r\n        } else {\r\n            //Listar pais do campo de pesquisa\r\n            if(response.data.data.country == undefined) {\r\n                alert('OPS! País não encontrado... Escreva o nome do país em inglês, ou verifique se você digitou corretamente')\r\n                this.carregarPaises()\r\n            } else {\r\n                const dados = []\r\n                dados.push(response.data.data)\r\n                this.setState({paises: dados, estados: response2.data.data})\r\n            }\r\n        }\r\n    }\r\n\r\n    onSend() {\r\n        //receber pais do campo de pesquisa\r\n        this.carregarPaises('/'+this.state.pais)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"lista-paises\">\r\n                <div className=\"dados\">\r\n                    <div className=\"paises\">\r\n                        <h2>Status em alguns países</h2>\r\n                        <input onInput={(e) => this.setState({pais: e.target.value})} type=\"text\" name=\"busca-pais\"></input>\r\n                        <button type=\"button\" onClick={this.onSend.bind(this)}>Buscar</button>\r\n                        <p className=\"obs\">OBS: Por favor, digite o nome dos países em inglês.</p>\r\n                        <div className=\"paises-rolagem\">\r\n                            {this.state.paises.map(pais => (\r\n                                <article className=\"pais\" key={pais.country}>\r\n                                    <h3>{pais.country}</h3>\r\n                                    <p><span>Casos:</span> {pais.cases}</p>\r\n                                    <p><span>Confirmados:</span> {pais.confirmed}</p>\r\n                                    <p><span>Mortes:</span> {pais.deaths}</p>\r\n                                    <p><span>recuperados:</span> {pais.recovered}</p>\r\n                                </article>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"estados\">\r\n                        <div className='status-brasil'>\r\n                            <h2>Estados brasileiros</h2>\r\n                            <table className=\"table-title\">\r\n                                <td>\r\n                                    <tr>ESTADO</tr>\r\n                                </td>\r\n                                <td>\r\n                                    <tr>CASOS</tr>\r\n                                </td>\r\n                                <td>\r\n                                    <tr>MORTES</tr>\r\n                                </td>\r\n                                <td>\r\n                                    <tr>SUSPEITOS</tr>\r\n                                </td>    \r\n                            </table>\r\n                            <div className=\"estados-rolagem\">      \r\n                                <table>\r\n                                    <td>\r\n                                        <hr/>\r\n                                        {this.state.estados.map(estado=>(<tr>{estado.uf}</tr>))}  \r\n                                    </td>\r\n                                    <td>\r\n                                        <hr/>\r\n                                        {this.state.estados.map(estado=>(<tr>{estado.cases}</tr>))}   \r\n                                    </td>\r\n                                    <td>\r\n                                        <hr/>\r\n                                        {this.state.estados.map(estado=>(<tr>{estado.deaths}</tr>))}\r\n                                    </td>\r\n                                    <td>\r\n                                        <hr/>\r\n                                        {this.state.estados.map(estado=>(<tr>{estado.suspects}</tr>))}\r\n                                    </td>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"caixa-orientação\">\r\n                    <h3>Quais são os sintomas do COVID-19?</h3>\r\n                    <p>\r\n                        Muitas pessoas não sabem quais são os sintomas do COVID -19, com toda razão, pois no unicio os sintomas são bem parecidos com o de uma gripe comum.\r\n                    </p>\r\n                    <p>\r\n                        Por isso desenvolvi um sistema de orietação de sintomas da COVID-19, onde você responderá algumas perguntas, para lhe orientar em que momento você deve procurar uma UBS para uma avaliação detalhada.\r\n                    </p>\r\n                    <div className=\"botao\">\r\n                        <Link to={'/orientacao'}>Ver perguntas</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport './style.css'\r\n\r\nexport default class Orientacao extends Component {\r\n    state = {\r\n        pergunta: [\r\n            'Tem febre?',\r\n            'Tem dor de cabeça?',\r\n            'Tem secrecão nazal ou espirros?',\r\n            'Tem dor/irritação de garganta?',\r\n            'Tem tosse seca?',\r\n            'Tem dificuldade respiratória?',\r\n            'Tem dores no corpo?',\r\n            'Tem diarreia?',\r\n            'Viajou, nos ultimos 14 dias, para algum local com casos confirmados de COVID-19?',\r\n            'Esteve em contato, nos ultimos 14 dias, com um caso diagnosticado com COVID-19?'\r\n        ],\r\n\r\n        perguntaAtual: 0,\r\n        pontos: 0,\r\n        resultado: 0,\r\n        texto: 'baixo',\r\n        detalhe: 'Não há nenhum risco. Continue tomando cuidado.' \r\n    }\r\n\r\n    pularPergunta = () => {\r\n        let atual = this.state.perguntaAtual\r\n        atual = atual + 1\r\n        this.setState({perguntaAtual: atual})\r\n\r\n        if(atual ==10) {\r\n            this.setState({resultado: 1})\r\n        }\r\n    }  \r\n\r\n    somarPontos = () => {\r\n        let perguntaAtual = this.state.perguntaAtual\r\n        let pontos = this.state.pontos\r\n        \r\n        switch(perguntaAtual) {\r\n            case 0:\r\n                pontos = pontos + 5\r\n                this.setState({pontos: pontos})\r\n            break;\r\n            \r\n            case 1:\r\n                pontos = pontos + 1\r\n                this.setState({pontos: pontos})\r\n            break;\r\n\r\n            case 2:\r\n                pontos = pontos + 1\r\n                this.setState({pontos: pontos})\r\n            break;\r\n\r\n            case 3:\r\n                pontos = pontos + 1\r\n                this.setState({pontos: pontos})\r\n            break;\r\n\r\n            case 4:\r\n                pontos = pontos + 3\r\n                this.setState({pontos: pontos})\r\n            break;\r\n\r\n            case 5:\r\n                pontos = pontos + 10\r\n                this.setState({pontos: pontos})\r\n            break;\r\n\r\n            case 6:\r\n                pontos = pontos + 1\r\n                this.setState({pontos: pontos})\r\n            break;\r\n\r\n            case 7:\r\n                pontos = pontos + 1\r\n                this.setState({pontos: pontos})\r\n            break;\r\n\r\n            case 8:\r\n                pontos = pontos + 3\r\n                this.setState({pontos: pontos})\r\n            break;\r\n\r\n            case 9:\r\n                pontos = pontos + 10\r\n                this.setState({pontos: pontos})\r\n            break;\r\n        }\r\n        this.pularPergunta()\r\n        this.mostrarResultado()\r\n    }\r\n\r\n    mostrarResultado = () => {\r\n        const pontos = this.state.pontos\r\n        let texto = ''\r\n        let detalhe = ''\r\n\r\n        if(pontos >= 0 && pontos <= 9) {\r\n            texto = 'baixo'\r\n            detalhe = 'Não há nenhum risco. Continue tomando cuidado.'\r\n        } else if(pontos >= 10 && pontos <= 19) {\r\n            texto = 'medio'\r\n            detalhe = 'Mantenha uma alimentação saldavel e procure ficar em repouso en casa por 14 dias.'\r\n        } else if(pontos >= 20 && pontos <= 36) {\r\n            texto = 'alto'\r\n            detalhe = 'Fique de repouso, hidrate-se bem, mantenha uma alimentação saudável e, se precisar, recorra a medicamentos como antitérmicos e analgésicos para aliviar os incômodos. Se precisar tirar qualquer dúvida, ligue para o Disque Saúde, pelo número 136 – profissionais fazem o atendimento, dando orientações sem que o paciente precise se deslocar.'\r\n        }\r\n\r\n        \r\n        this.setState({texto: texto})\r\n        this.setState({detalhe: detalhe})\r\n    }\r\n\r\n    render() { \r\n        const {pergunta, perguntaAtual, pontos, resultado, texto, detalhe} = this.state\r\n\r\n        if(resultado == 0) {\r\n            return (\r\n                <div className=\"orientacao\">\r\n                    <div className=\"area-perguntas\">\r\n                        <div className=\"perguntas\">\r\n                            <p>{pergunta[perguntaAtual]}</p>\r\n                        </div>\r\n                        <button type=\"button\" onClick={this.somarPontos} name=\"sim\">SIM</button>\r\n                        <button type=\"button\" onClick={this.pularPergunta} name=\"nao\">NÂO</button>                \r\n                    </div>\r\n\r\n                    <div className=\"info\">\r\n                        <p>Esse sistema de avaliação, usando estas perguntas, foi desenvolvido com base no #COVID-19hackton - Ecossistema de inovação do moçambique.</p>\r\n                        <p>ATENÇÃO: As perguntas desta página é somente para orientação. Não tome como verdade.</p>\r\n                        <p>Nada substitui o diagnóstico feito por um médico especialista. Qualquer dúvida ligue para o Disque Saúde, pelo numero -136, onde profissionais irão lhe atenter com mais segurança.</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className=\"orientacao\">\r\n                    <div className=\"area-resultado\">\r\n                        <div className=\"resultado\">\r\n                            <h3>Resultado: <span>{pontos} (Risco {texto})</span></h3>\r\n                        </div>\r\n                        <div className=\"texto-resultado\">\r\n                            <p>\r\n                                <span>{detalhe}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"botao\">\r\n                            <Link to={\"/\"}>Voltar para estatisticas</Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"info\">\r\n                        <p>Este sistema de avaliação, foi desenvolvido com base no #COVID-19hackton - Ecossistema de inovação do moçambique.</p>\r\n                        <p>ATENÇÃO: As perguntas desta página é somente para orientação. Não tome como verdade.</p>\r\n                        <p>Nada substitui o diagnóstico feito por um médico especialista. Qualquer dúvida ligue para o Disque Saúde, pelo numero -136, onde profissionais irão lhe atenter com mais segurança.</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n       \r\n    }\r\n}  ","import React from 'react';\r\n\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\r\n\r\nimport Home from './pages/home'\r\nimport Orientacao from './pages/orientacao'\r\n\r\nconst Routes = () => (\r\n    <BrowserRouter>\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route path=\"/orientacao\" component={Orientacao} />\r\n        </Switch>\r\n    </BrowserRouter>\r\n)\r\n\r\nexport default Routes;","import React, {Component} from 'react';\nimport Header from  './components/Header'\nimport Rodape from './components/Rodape'\nimport Routes from './routes'\n\nimport './estilo.css'\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <Routes />\n    <Rodape />\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}